So you want to contribute? That's great, thank you! Here are some tips that
will help you make us cry with delight at the very sight of your patch:

Patch format
------------
- it's best if the patches are directly processable by Git (such as when using
  `git-format-patch', `git-send-email' or the ---8<--- scissors trick)
- a nice way to have Git produce better diff hunk headers when working with
  Lisp code is to add this to your config:

[diff "lisp"]
    xfuncname = "^\\(.*$"

With this and an appropriate diff attribute definition (provided by the
.gitattributes file in the repository), it will be immediately visible which
top level Lisp form a particular hunk pertains to.

Commit messages
---------------
- the first line is a commit summary, usually a single sentence in imperative
  (starting with a capital letter and ending with a period) short enough to fit
  in a mail subject line
- after that and a blank line comes the commit message with a free form
  explanation (optional for trivial patches)

General coding guidelines
-------------------------
- keep it inside 80 columns when possible
- avoid trailing whitespace (Git can help you with that)
- if you're making bigger changes, it's a good idea to try byte-compiling
  Vimpulse even though you normally don't (the compiler sometimes catches
  issues not obvious when running uncompiled)
